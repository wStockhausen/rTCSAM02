% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runJitter.R
\name{runJitter}
\alias{runJitter}
\title{Function to run TCSAM02 multiple times using jittered initial parameter values.}
\usage{
runJitter(
  os = "osx",
  path = ".",
  model = "tcsam02",
  path2model = "",
  configFile = "",
  numRuns = 3,
  minPhase = 1,
  onlyEvalJitter = FALSE,
  in.csv = "jitterInfo.csv",
  out.csv = "jitterResults.csv",
  calcOFL = FALSE,
  calcOFLJitter = FALSE,
  mcmc = FALSE,
  mc.N = 1e+06,
  mc.save = 1000,
  mc.scale = 1000,
  saveResults = FALSE,
  cleanup = TRUE,
  keepFiles = c("tmp.sh", "tcsam02.par"),
  cleanupAll = FALSE
)
}
\arguments{
\item{os}{\itemize{
\item 'win', 'mac', 'osx', or 'linux'
}}

\item{path}{\itemize{
\item path for model output
}}

\item{model}{\itemize{
\item TCSAM02 model executable name
}}

\item{path2model}{\itemize{
\item path to model executable
}}

\item{configFile}{\itemize{
\item path to model configuration file
}}

\item{numRuns}{\itemize{
\item number of jitter runs to make
}}

\item{minPhase}{\itemize{
\item phase in which to start optimization
}}

\item{onlyEvalJitter}{\itemize{
\item flag (T/F) to only evaluate a (previous) set of jitter runs, not make new runs
}}

\item{in.csv}{\itemize{
\item filename for jitter info (seed, obj fun value) from ADMB model run
}}

\item{out.csv}{\itemize{
\item filename for jittered results
}}

\item{calcOFL}{\itemize{
\item flag (T/F) to perform OFL calculations for "best" model
}}

\item{calcOFLJitter}{\itemize{
\item flag (T/F) to perform OFL calculations while jittering
}}

\item{mcmc}{\itemize{
\item flag (T/F) to run mcmc on "best" model
}}

\item{mc.N}{\itemize{
\item number of mcmc iterations to make
}}

\item{mc.save}{\itemize{
\item number of iterations to skip when saving mcmc calculations
}}

\item{mc.scale}{\itemize{
\item number of iterations to adjust scale for mcmc calculations
}}

\item{saveResults}{\itemize{
\item T/F to save final results to best/ModelResults.RData
}}

\item{cleanup}{\itemize{
\item T/F to clean up SOME model output files after each run
}}

\item{keepFiles}{\itemize{
\item vector of file names to keep, not clean up, after model run
}}

\item{cleanupAll}{\itemize{
\item T/F to clean up ALMOST ALL model output files after each run
}}
}
\value{
\itemize{
\item list w/ 4 elements:
imx  - index of (1st) smallest value for the objective function
seed - seed resulting in the smallest objective function
par  - dataframe with par results from run w/ smallest objective function
objFuns - vector of objective function values from all model runs
parList - list of par dataframes for each model run
}
}
\description{
This functions runs a TCSAM02 model multiple times, jittering the
initial starting values to assess model convergence.
}
\details{
For each model run, this function creates a shell script ('./tmp.sh') in the
working directory and uses it to run the ADMB version of the TCSAM02 model.
Initial model parameters are jittered based on the system clock time as a seed
to the random number generator. The seed and final objective function value are
saved for each model run in a csv file (the value of out.csv).

When all the models requested have been run,
the function determines the seed associated with the 1st model run that yielded
the smallest value for the objective function and re-runs the model using this seed
to re-create the model run resulting in the minimum objectve function to recreate
the model output files. The final model run is done estimating the hessian, so
standard deviations for estimated model parameters are available in the .std file.
}
